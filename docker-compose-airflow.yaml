version: '3.8'

### AIRFLOW ###
x-airflow-common:
  &airflow
  build: .
  environment:
    &airflow-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    _AIRFLOW_DB_MIGRATE: 'true'
    _AIRFLOW_WWW_USER_CREATE: 'true'
    _AIRFLOW_WWW_USER_USERNAME: airflow
    _AIRFLOW_WWW_USER_PASSWORD: airflow
    PYTHONPATH: /opt/airflow:/opt/airflow

  user: "${AIRFLOW_UID:-50000}:0"
  volumes:
    - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
    - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
    - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
  networks:
    - ggmaps
  depends_on:
    &airflow-depends-on
    postgres:
        condition: service_healthy

services:

### AIRFLOW WEBSERVER ###
  airflow-webserver:
    <<: *airflow
    command: >
            bash -c "
            airflow db init &&
            airflow webserver &&
            pip install -r opt/airflow/plugins/requirements.txt"
    container_name: airflow-webserver
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl","--fail","http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: 'always'
    depends_on:
      <<: *airflow-depends-on

### AIRFLOW SCHEDULER ###
  airflow-scheduler:
    <<: *airflow
    command: >
      bash -c "
      airflow scheduler &&
      pip install -r opt/airflow/plugins/requirements.txt"
    container_name: airflow_scheduler
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: 'always'
    depends_on:
      <<: *airflow-depends-on

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin12345
    ports:
      - "80:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: 'always'
    networks:
      - ggmaps
### POSTGRES ###
  postgres:
    image: postgres:12.20-alpine3.20
    container_name: postgres
    ports:
      - 5434:5432
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready","-U","airflow"] # Same with pg_isready -U airflows
      interval: 10s
      retries: 5
      start_period: 5s
    restart: 'always'
    networks:
      - ggmaps

### Minio
  minio:
    image: minio/minio:RELEASE.2024-09-22T00-33-43Z.fips
    container_name: minio
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ./minio_storage:/data
    command:  server --console-address ":9001" /data
    environment:
      - MINIO_ROOT_USER=admin12345
      - MINIO_ROOT_PASSWORD=admin12345
    networks:
      - ggmaps
    restart: 'always'

networks:
  ggmaps:
    driver: bridge
volumes:
  postgres-db-volume:
  pgadmin_data: